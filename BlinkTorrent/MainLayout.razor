@inherits LayoutComponentBase
@inject IDialogService DialogService
@inject BrowserStorageHelperFactory BrowserStorageHelperFactory

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider/>

@* https://stackoverflow.com/questions/54453995/how-to-have-a-gradient-take-up-the-full-screen-in-bootstrap-and-css/54454030#54454030 *@
@*
    <MudLayout Style="
  background-color: #555555;
  background-image: linear-gradient(225deg, #55111155 0%, #22552255 50%, #00226655 100%);
  background-repeat: no-repeat;
  background-repeat: no-repeat;
  background-size: cover;
  min-width: 100%;
  min-height: 100vh;">

*@

<MudLayout>
    <MudAppBar>
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Inherit" OnClick="OpenDialog" />
        <MudIconButton Icon="@Icons.Material.Filled.Link" Color="Color.Inherit" OnClick="LinkDialog" />
        <MudSpacer />
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/jpmikkers/BlinkTorrent" Target="_blank" />
        @if(_isDarkMode)
        {
            <MudIconButton Icon="@Icons.Material.Filled.LightMode" Color="Color.Inherit" OnClick="@(async (e) => await DoLightMode())" />
        }
        else
        {
            <MudIconButton Icon="@Icons.Material.Filled.DarkMode" Color="Color.Inherit" OnClick="@(async (e) => await DoDarkMode())" />
        }
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader Class="gap-2" >
            <BlinkyBall/>
            <MudText Typo="Typo.h6">BlinkTorrent</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private BrowserStorageHelper<bool> _browserStorageHelper = default!;
    private bool _isDarkMode = true;
    private MudThemeProvider? _mudThemeProvider;
    private MudTheme? _theme = new();
    bool _drawerOpen = true;

    public MainLayout()
    {
        _theme.LayoutProperties.DrawerWidthLeft = "220px";
        _theme.Palette.Background = new MudBlazor.Utilities.MudColor(230,230,230, 255);
        _theme.Palette.DrawerBackground = new MudBlazor.Utilities.MudColor(200, 200, 250, 255);
        _theme.LayoutProperties.DefaultBorderRadius = "4px";
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    async Task DoDarkMode()
    {
        _isDarkMode = true;
        await _browserStorageHelper.SetAsync(_isDarkMode);
    }

    async Task DoLightMode()
    {
        _isDarkMode = false;
        await _browserStorageHelper.SetAsync(_isDarkMode);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            _isDarkMode = await _browserStorageHelper.GetOrSetDefaultAsync(GetDarkModeSystemPreference);
            StateHasChanged();
        }
    }

    private async Task<bool> GetDarkModeSystemPreference()
    {
        return await _mudThemeProvider!.GetSystemPreference();
    }

    private void OpenDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true, DisableBackdropClick=true };
        DialogService.Show<Pages.AddDialog>("Add torrents", options);
    }

    private void LinkDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true, DisableBackdropClick = true };
        DialogService.Show<Pages.LinkDialog>("Enter torrent or magnet link", options);
    }

    protected override void OnInitialized()
    {
        _browserStorageHelper = BrowserStorageHelperFactory.Create<bool>("blinktorrent.darkmode");
        StateHasChanged();
    }
}
