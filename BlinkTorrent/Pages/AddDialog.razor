@using Microsoft.AspNetCore.Components.Forms;
@inject ITorrentService torrentService

<MudDialog>
    <DialogContent>
        <MudStack>
            <MudFileUpload T="IReadOnlyList<IBrowserFile>" Accept=".torrent" FilesChanged="UploadFiles" MaximumFileCount="10">
                 <ActivatorContent>
                    <MudButton HtmlTag="label"
                               Variant="Variant.Filled"
                               Color="Color.Primary"
                               StartIcon="@Icons.Material.Filled.CloudUpload">
                        Select torrent files
                    </MudButton>
                </ActivatorContent>
            </MudFileUpload>
            <MudPaper Elevation="2">
                @if(files != null && files.Count > 0)
                {
                    <MudText Typo="@Typo.h6">@files.Count() File@(files.Count() == 1 ? "" : "s"):</MudText>
                    <MudList T="string">
                        @foreach(var file in files)
                        {
                            <MudListItem Icon="@Icons.Material.Filled.AttachFile" @key="@file">
                                <MudStack Row=true>
                                    <MudText>@file.Name <code>@file.Size bytes</code></MudText>
                                    <MudSpacer></MudSpacer>
                                    <MudIconButton Size="Size.Small" Color="Color.Error" Icon="@Icons.Material.Filled.Close" OnClick=@(() => RemoveFile(@file))></MudIconButton>
                                </MudStack>
                            </MudListItem>
                        }
                    </MudList>
                }
            </MudPaper>
        </MudStack>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Upload</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }

    private async Task Submit()
    {
        foreach (var file in files)
        {
            using (var ms = new MemoryStream())
            {
                await file.OpenReadStream().CopyToAsync(ms);
                ms.Position = 0;
                await torrentService.DownloadTorrent(ms);
            }
        }
        MudDialog?.Close(DialogResult.Ok(true));
    }

    void Cancel() => MudDialog?.Cancel();

    private void RemoveFile(IBrowserFile file)
    {
        files.Remove(file);
    }

    IList<IBrowserFile> files = new List<IBrowserFile>();
    private void UploadFiles(IReadOnlyList<IBrowserFile> files)
    {
        foreach(var file in files)
        {
            this.files.Add(file);
        }
        //TODO upload the files to the server
    }
}

